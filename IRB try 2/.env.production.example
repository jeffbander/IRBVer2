# ==============================================================================
# PRODUCTION ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file contains all required environment variables for production deployment
# Copy this file and configure for your environment:
#   - .env.staging for staging environment
#   - .env.production for production environment
#
# SECURITY WARNING: Never commit actual .env files to version control!
# ==============================================================================

# ------------------------------------------------------------------------------
# DATABASE CONFIGURATION (PostgreSQL)
# ------------------------------------------------------------------------------
# Cloud SQL PostgreSQL connection string
# Format: postgresql://USER:PASSWORD@HOST:PORT/DATABASE?schema=public
#
# For Cloud SQL with connection pooling (recommended):
# DATABASE_URL="postgresql://USER:PASSWORD@/DATABASE?host=/cloudsql/PROJECT:REGION:INSTANCE&schema=public"
#
# For direct connection:
DATABASE_URL="postgresql://irbuser:YOUR_SECURE_PASSWORD@localhost:5432/irb_production?schema=public"

# Connection pool settings (optional, for pgBouncer or similar)
# DATABASE_POOL_MIN=2
# DATABASE_POOL_MAX=10
# DATABASE_CONNECTION_TIMEOUT=30000

# ------------------------------------------------------------------------------
# AUTHENTICATION & SECURITY
# ------------------------------------------------------------------------------
# JWT Secret - MUST be a long, random string (min 64 characters)
# Generate with: openssl rand -base64 64
JWT_SECRET="YOUR_LONG_RANDOM_JWT_SECRET_MINIMUM_64_CHARACTERS_RECOMMENDED"

# JWT token expiration (examples: 1d, 7d, 30d)
JWT_EXPIRES_IN="7d"

# Bcrypt rounds (10-12 for production, higher = more secure but slower)
BCRYPT_ROUNDS="12"

# Session secret for express-session (if used)
SESSION_SECRET="YOUR_LONG_RANDOM_SESSION_SECRET"
SESSION_MAX_AGE="86400000"

# ------------------------------------------------------------------------------
# APPLICATION CONFIGURATION
# ------------------------------------------------------------------------------
NODE_ENV="production"

# Port (Cloud Run typically uses 8080)
PORT="8080"

# Base URL of your application
BASE_URL="https://your-app.run.app"

# Application name and version (optional)
APP_NAME="IRB Management System"
APP_VERSION="1.0.0"

# ------------------------------------------------------------------------------
# RATE LIMITING & SECURITY
# ------------------------------------------------------------------------------
# Rate limit: max requests per window
RATE_LIMIT_MAX="100"

# Rate limit window in milliseconds (15 minutes = 900000)
RATE_LIMIT_WINDOW_MS="900000"

# CORS allowed origins (comma-separated)
CORS_ORIGIN="https://your-app.run.app,https://your-custom-domain.com"

# Trust proxy (set to 1 when behind Cloud Run/Load Balancer)
TRUST_PROXY="1"

# ------------------------------------------------------------------------------
# FILE UPLOAD CONFIGURATION
# ------------------------------------------------------------------------------
# Maximum file size in MB
MAX_FILE_SIZE_MB="10"

# Upload directory (use Cloud Storage in production)
UPLOAD_DIR="./uploads"

# Cloud Storage configuration (recommended for production)
# GCS_BUCKET_NAME="your-bucket-name"
# GCS_PROJECT_ID="your-gcp-project-id"
# GCS_KEY_FILE="/path/to/service-account-key.json"

# ------------------------------------------------------------------------------
# AIGENTS AI INTEGRATION
# ------------------------------------------------------------------------------
# Aigents API endpoint
AIGENTS_API_URL="https://start-chain-run-943506065004.us-central1.run.app"

# Aigents notification email
AIGENTS_EMAIL="notifications@providerloop.com"

# Webhook secret for Aigents callbacks (generate a strong random string)
AIGENTS_WEBHOOK_SECRET="YOUR_SECURE_WEBHOOK_SECRET"

# AppSheet folder ID for chain runs
AIGENTS_FOLDER_ID="YOUR_FOLDER_ID"

# Set to 'false' in production to use real Aigents API
USE_AIGENTS_MOCK="false"

# ------------------------------------------------------------------------------
# LOGGING & MONITORING
# ------------------------------------------------------------------------------
# Log level: error, warn, info, debug
LOG_LEVEL="info"

# Log format: json or text
LOG_FORMAT="json"

# Enable request logging
ENABLE_REQUEST_LOGGING="true"

# Google Cloud Logging (if using Cloud Run)
# GOOGLE_CLOUD_PROJECT="your-gcp-project-id"

# Sentry DSN for error tracking (optional)
# SENTRY_DSN="https://your-sentry-dsn@sentry.io/project-id"
# SENTRY_ENVIRONMENT="production"

# ------------------------------------------------------------------------------
# EMAIL CONFIGURATION (Optional)
# ------------------------------------------------------------------------------
# SMTP settings for email notifications
# SMTP_HOST="smtp.gmail.com"
# SMTP_PORT="587"
# SMTP_SECURE="false"
# SMTP_USER="your-email@gmail.com"
# SMTP_PASS="your-app-specific-password"
# SMTP_FROM="noreply@your-domain.com"

# SendGrid API Key (alternative to SMTP)
# SENDGRID_API_KEY="your-sendgrid-api-key"

# ------------------------------------------------------------------------------
# FEATURE FLAGS (Optional)
# ------------------------------------------------------------------------------
# Enable/disable specific features
# ENABLE_USER_REGISTRATION="false"
# ENABLE_AIGENTS_INTEGRATION="true"
# ENABLE_EMAIL_NOTIFICATIONS="true"
# MAINTENANCE_MODE="false"

# ------------------------------------------------------------------------------
# EXTERNAL SERVICES (Optional)
# ------------------------------------------------------------------------------
# Google Analytics
# GA_TRACKING_ID="G-XXXXXXXXXX"

# Redis for caching/sessions (optional)
# REDIS_URL="redis://localhost:6379"

# ------------------------------------------------------------------------------
# BACKUP CONFIGURATION (Optional)
# ------------------------------------------------------------------------------
# Automated backup settings
# BACKUP_ENABLED="true"
# BACKUP_SCHEDULE="0 2 * * *"
# BACKUP_RETENTION_DAYS="30"
# BACKUP_BUCKET="your-backup-bucket"

# ------------------------------------------------------------------------------
# NEXT.JS SPECIFIC
# ------------------------------------------------------------------------------
# Disable Next.js telemetry in production
NEXT_TELEMETRY_DISABLED="1"

# ------------------------------------------------------------------------------
# HEALTH CHECK & MONITORING
# ------------------------------------------------------------------------------
# Health check endpoint configuration
# HEALTH_CHECK_PATH="/api/health"
# HEALTH_CHECK_TIMEOUT="5000"

# ------------------------------------------------------------------------------
# DATABASE MIGRATIONS
# ------------------------------------------------------------------------------
# Run migrations automatically on startup (not recommended for production)
# AUTO_MIGRATE="false"

# Migration timeout in milliseconds
# MIGRATION_TIMEOUT="300000"

# ------------------------------------------------------------------------------
# NOTES FOR DEPLOYMENT
# ------------------------------------------------------------------------------
# GCP Secret Manager:
#   Store sensitive values in Secret Manager and reference them in Cloud Run
#   Example: --set-secrets "JWT_SECRET=JWT_SECRET_PRODUCTION:latest"
#
# GitHub Secrets:
#   Configure these values in GitHub repository settings > Secrets and variables
#   - DATABASE_URL_PRODUCTION
#   - JWT_SECRET_PRODUCTION
#   - AIGENTS_WEBHOOK_SECRET_PRODUCTION
#   - GCP_SA_KEY_PRODUCTION
#   - etc.
#
# Environment-specific files:
#   - .env.development (local development)
#   - .env.staging (staging environment)
#   - .env.production (production environment)
#   - .env.test (testing environment)
