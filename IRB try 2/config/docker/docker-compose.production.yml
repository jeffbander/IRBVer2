version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: irb-system-production
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS:-12}
      - BASE_URL=${BASE_URL}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB:-10}
      - AIGENTS_API_URL=${AIGENTS_API_URL}
      - AIGENTS_EMAIL=${AIGENTS_EMAIL}
      - AIGENTS_WEBHOOK_SECRET=${AIGENTS_WEBHOOK_SECRET}
      - AIGENTS_FOLDER_ID=${AIGENTS_FOLDER_ID}
      - USE_AIGENTS_MOCK=${USE_AIGENTS_MOCK:-false}
    volumes:
      - uploads:/app/uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 40s
    networks:
      - irb-network
    depends_on:
      - postgres

  postgres:
    image: postgres:16-alpine
    container_name: irb-postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-irbuser}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-irb_production}
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-irbuser}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - irb-network

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: irb-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@irb.local}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    restart: unless-stopped
    networks:
      - irb-network
    depends_on:
      - postgres
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  uploads:
    driver: local

networks:
  irb-network:
    driver: bridge
